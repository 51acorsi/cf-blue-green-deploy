#!/bin/bash

trap cleanup EXIT

cleanup() {
  TEST_ACCEPTANCE_LOG="${TEST_ACCEPTANCE_LOG:?Must be defined in .env}"

  rm -f "$TEST_ACCEPTANCE_LOG"
}

main() {
  . script/with_env
  . script/common

  ignore_any_failures

  if [ -z "$TURBO" ]
  then
    script/setup
    script/build
    script/install

    push_example_apps
  fi

  pushd acceptance/app >/dev/null
    assert_plugin_output_includes_successful_smoke_test_output
    assert_plugin_fails_if_smoke_test_script_fails
  popd >/dev/null

  echo "PASS!"
}

ignore_any_failures() {
  set +e
}

assert_plugin_output_includes_successful_smoke_test_output() {
  TEST_ACCEPTANCE_LOG="${TEST_ACCEPTANCE_LOG:?Must be defined in .env}"

  local smoke_test_script="script/smoke_test"
  local smoke_test_output="Hello world from my Go program!"

  cf bgd cf-blue-green-deploy-test-app --smoke-test "$smoke_test_script" | tee "$TEST_ACCEPTANCE_LOG"

  if ! grep "$smoke_test_output" "$TEST_ACCEPTANCE_LOG"
  then
    printf "\n\nExpected cf bgd to include '%s' from %s output\n" "$smoke_test_output" "$smoke_test_script"
    exit 1
  fi
}

assert_plugin_fails_if_smoke_test_script_fails() {
  TEST_ACCEPTANCE_LOG="${TEST_ACCEPTANCE_LOG:?Must be defined in .env}"

  local smoke_test_script="script/smoke_test"
  local expected_output_last_line="Smoke tests failed - exit status 1"

  cf bgd cf-blue-green-deploy-test-app-FORCE-SMOKE-TEST-FAILURE --smoke-test $smoke_test_script | tee "$TEST_ACCEPTANCE_LOG"

  if [ "$(tail -n 1 "$TEST_ACCEPTANCE_LOG")" != "$expected_output_last_line" ]
  then
    printf "\n\nExpected cf bgd to stop with %s\n" "$expected_output_last_line"
    exit 1
  fi
}

main
